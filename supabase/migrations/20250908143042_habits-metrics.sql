CREATE TABLE IF NOT EXISTS habit (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT,
    type VARCHAR(20) NOT NULL CHECK (type IN ('score', 'boolean')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS habit_entry (
    id SERIAL PRIMARY KEY,
    habit_id INTEGER NOT NULL REFERENCES habit (id) ON DELETE CASCADE,
    date DATE NOT NULL,
    score INTEGER CHECK (score >= 1 AND score <= 10),
    completed BOOLEAN,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (habit_id, date)
);

CREATE TABLE IF NOT EXISTS metric (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT,
    unit VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS metric_entry (
    id SERIAL PRIMARY KEY,
    metric_id INTEGER NOT NULL REFERENCES metric (id) ON DELETE CASCADE,
    date DATE NOT NULL,
    value NUMERIC NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (metric_id, date)
);

CREATE TRIGGER update_habit_updated_at
BEFORE UPDATE ON habit
FOR EACH ROW
EXECUTE FUNCTION UPDATE_UPDATED_AT_COLUMN();

CREATE TRIGGER update_habit_entry_updated_at
BEFORE UPDATE ON habit_entry
FOR EACH ROW
EXECUTE FUNCTION UPDATE_UPDATED_AT_COLUMN();

CREATE TRIGGER update_metric_updated_at
BEFORE UPDATE ON metric
FOR EACH ROW
EXECUTE FUNCTION UPDATE_UPDATED_AT_COLUMN();

CREATE TRIGGER update_metric_entry_updated_at
BEFORE UPDATE ON metric_entry
FOR EACH ROW
EXECUTE FUNCTION UPDATE_UPDATED_AT_COLUMN();
